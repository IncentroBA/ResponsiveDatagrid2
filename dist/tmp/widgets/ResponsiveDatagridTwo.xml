<?xml version="1.0" encoding="utf-8"?>
<widget id="incentro.responsivedatagridtwo.ResponsiveDatagridTwo" pluginWidget="true" needsEntityContext="true" offlineCapable="true"
        supportedPlatform="Web"
        xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>Responsive Data grid 2</name>
    <description>Add-on for Data grid 2 to make columns respond to the page width and hide columns behind a collapsible chevron when there is less room.</description>
    <studioProCategory>Add-ons</studioProCategory>
    <studioCategory>Add-ons</studioCategory>
    <properties>
        <propertyGroup caption="General">
            <property key="dataGridWidget" type="widgets" required="true">
                <caption>Place a single Data grid 2 widget</caption>
                <description>Place a Datagridv2 widget inside.</description>
            </property>
            <property key="keepLastBoolean" type="boolean" defaultValue="true">
                <caption>Keep last column</caption>
                <description>Set to true if the last column contains actions or data that should stay in row.</description>
            </property>
            <property key="RenderChevron" type="enumeration" defaultValue="left">
                <caption>Render chevron</caption>
                <description/>
                <enumerationValues>
                    <enumerationValue key="left">Left</enumerationValue>
                    <enumerationValue key="right">Right</enumerationValue>
                </enumerationValues>
            </property>
            <property key="forceAutoFill" type="boolean" defaultValue="true">
                <caption>Autofill column</caption>
                <description>Make sure at least 1 column is set to autofill for responsive use. only disable if it's not needed.</description>
            </property>
            <property key="breakpoints" type="object" isList="true" required="false">
                <caption>Breakpoints</caption>
                <description>Good defaults:
mobile - 576px - 3 columns
tablet   - 992px - 5 columns</description>
                <properties>
                    <propertyGroup caption="Breakpoints">
                        <property key="for" type="enumeration" defaultValue="mobile">
                            <caption>Breakpoint for</caption>
                            <description>Any resolution larger is interpreted as Large Desktop and displays all columns.</description>
                            <enumerationValues>
                                <enumerationValue key="mobile">Mobile</enumerationValue>
                                <enumerationValue key="tablet">Tablet</enumerationValue>
                                <enumerationValue key="desktop">Desktop</enumerationValue>
                            </enumerationValues>
                        </property>
                        <property key="value" type="integer" defaultValue="576">
                            <caption>Value</caption>
                            <description>in pixels</description>
                        </property>
                        <property key="columns" type="integer" defaultValue="3">
                            <caption>Columns</caption>
                            <description>The amount of visible columns</description>
                        </property>
                    </propertyGroup>
                </properties>
            </property>
            <property key="DS" type="datasource" isList="true" required="false">
                <caption>Data source</caption>
                <description>When the widget needs to reload because the data grid 2 reloads it's data.</description>
            </property>
            <!-- <property key="manualReload" type="attribute" required="false">
                <caption>Manual Reload</caption>
                <description>In case the data grid 2 does a reload and the widget needs to react.</description>
                <attributeTypes>
                    <attributeType name="Boolean"/>
                </attributeTypes>
            </property> -->
        </propertyGroup>
    </properties>
</widget>